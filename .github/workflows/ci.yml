name: CI
on:
  push:
    branches:
      - main
      - 'release/**'
      - 'test-cherry-pick-9456-1.6'
  pull_request:
    branches:
      - main
      - 'release/**'
      - 'test-cherry-pick-9456-1.6'

env:
  # Go version we currently use to build containerd across all CI.
  # Note: don't forget to update `Binaries` step, as it contains the matrix of all supported Go versions.
  GO_VERSION: "1.20.12"

permissions:  # added using https://github.com/step-security/secure-workflows
  contents: read

jobs:

  integration-linux:
    name: Linux Integration
    runs-on: ${{ matrix.os }}
    timeout-minutes: 40
    needs: [linters, protos, man]

    strategy:
      fail-fast: false
      matrix:
        runtime: [io.containerd.runc.v2]
        runc: [runc]
        os: [ubuntu-20.04, ubuntu-22.04]
        exclude:
          - runtime: io.containerd.runc.v1
            runc: crun
          - runtime: io.containerd.runtime.v1.linux
            runc: crun
          - runtime: io.containerd.runc.v1
            os: actuated-arm64-4cpu-16gb
          - runtime: io.containerd.runtime.v1.linux
            os: actuated-arm64-4cpu-16gb

    env:
      GOTEST: gotestsum --
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - uses: actions/checkout@v3

      - name: Install containerd dependencies
        env:
          RUNC_FLAVOR: ${{ matrix.runc }}
        run: |
          sudo apt-get install -y gperf libbtrfs-dev dmsetup strace xfsprogs
          script/setup/install-seccomp
          script/setup/install-runc
          script/setup/install-cni $(grep containernetworking/plugins go.mod | awk '{print $2}')
          script/setup/install-critools
          script/setup/install-failpoint-binaries

      - name: Install criu
        # NOTE: Required actuated enable CONFIG_CHECKPOINT_RESTORE
        #
        # REF: https://criu.org/Linux_kernel
        if: matrix.os != 'actuated-arm64-4cpu-16gb'
        run: |
          sudo add-apt-repository ppa:criu/ppa
          sudo apt-get update
          sudo apt-get install -y criu

      - name: Install containerd
        env:
          CGO_ENABLED: 1
        run: |
          make binaries GO_BUILD_FLAGS="-mod=vendor"
          sudo -E PATH=$PATH make install

      - run: script/setup/install-gotestsum

      - name: CRI Integration Test
        env:
          TEST_RUNTIME: ${{ matrix.runtime }}
        run: |
          CONTAINERD_RUNTIME=$TEST_RUNTIME make cri-integration

      - name: cri-tools critest
        env:
          TEST_RUNTIME: ${{ matrix.runtime }}
        run: |
          BDIR="$(mktemp -d -p $PWD)"

          function cleanup() {
            sudo pkill containerd || true
            cat ${BDIR}/containerd-cri.log
            sudo -E rm -rf ${BDIR}
          }
          trap cleanup EXIT

          mkdir -p ${BDIR}/{root,state}
          cat > ${BDIR}/config.toml <<EOF
            version = 2
            [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
            runtime_type = "${TEST_RUNTIME}"
          EOF
          sudo ls /etc/cni/net.d
          sudo -E PATH=$PATH /usr/local/bin/containerd -a ${BDIR}/c.sock --config ${BDIR}/config.toml --root ${BDIR}/root --state ${BDIR}/state --log-level debug &> ${BDIR}/containerd-cri.log &
          sudo -E PATH=$PATH /usr/local/bin/ctr -a ${BDIR}/c.sock version
          sudo -E PATH=$PATH critest --report-dir "${{github.workspace}}/critestreport" --runtime-endpoint=unix:///${BDIR}/c.sock --parallel=8

      # Log the status of this VM to investigate issues like
      # https://github.com/containerd/containerd/issues/4969
      - name: Host Status
        if: always()
        run: |
          set -x
          mount
          df
          losetup -l

      - name: Kernel Message
        if: failure()
        run: |
          sudo lsmod
          sudo dmesg -T -f kern

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: TestResults ${{ matrix.runtime }} ${{matrix.runc}}
          path: |
            *-junit.xml
            ${{github.workspace}}/critestreport/*.xml