name: CI
on:
  push:
    branches:
      - main
      - 'release/**'
  pull_request:
    branches:
      - main
      - 'release/**'

env:
  # Go version we currently use to build containerd across all CI.
  # Note: don't forget to update `Binaries` step, as it contains the matrix of all supported Go versions.
  GO_VERSION: '1.19.9'

permissions:  # added using https://github.com/step-security/secure-workflows
  contents: read

jobs:


  #
  # Integration and CRI tests
  #
  integration-windows:
    name: Windows Integration
    runs-on: ${{ matrix.os }}
    timeout-minutes: 35
    env:
      GOTEST: gotestsum --

    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019, windows-2022]

    defaults:
      run:
        shell: bash
        working-directory: src/github.com/containerd/containerd

    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - uses: actions/checkout@v3
        with:
          path: src/github.com/containerd/containerd

      - uses: actions/checkout@v3
        with:
          repository: Microsoft/hcsshim
          path: src/github.com/Microsoft/hcsshim

      - name: Set env
        run: |
          echo "GOPATH=${{ github.workspace }}" >> $GITHUB_ENV
          echo "${{ github.workspace }}/bin" >> $GITHUB_PATH
          echo "${{ github.workspace }}/src/github.com/containerd/containerd/bin" >> $GITHUB_PATH

      - run: script/setup/install-dev-tools

      - name: Downgrade choclatey
        shell: bash
        run: |
          choco upgrade chocolatey --version 1.4.0 --allow-downgrade

      # There is currently an issue in the race detector in Go on Windows when
      # used with a newer version of GCC. The issue was first reported here:
      # https://github.com/golang/go/issues/46099
      - name: Downgrade MinGW
        shell: bash
        run: |
          choco install mingw --version 10.2.0 --allow-downgrade

      - name: Binaries
        env:
          CGO_ENABLED: 1
        run: |
          set -o xtrace
          mingw32-make.exe binaries
          bindir="$(pwd)"
          SHIM_COMMIT=$(grep 'Microsoft/hcsshim ' go.mod | awk '{print $2}')
          cd ../../Microsoft/hcsshim
          git fetch --tags origin "${SHIM_COMMIT}"
          git checkout "${SHIM_COMMIT}"
          GO111MODULE=on go build -mod=vendor -o "${bindir}/integration/client/containerd-shim-runhcs-v1.exe" ./cmd/containerd-shim-runhcs-v1

      - run: script/setup/install-gotestsum
      - name: Tests
        env:
          CGO_ENABLED: 1
          GOTESTSUM_JUNITFILE: ${{github.workspace}}/test-unit-root.xml
        run: mingw32-make.exe test root-test

      - name: Integration 1
        env:
          CGO_ENABLED: 1
          GOTESTSUM_JUNITFILE: ${{github.workspace}}/test-integration-serial-junit.xml
        run: mingw32-make.exe integration

      # Run the integration suite a second time. See discussion in github.com/containerd/containerd/pull/1759
      - name: Integration 2
        env:
          TESTFLAGS_PARALLEL: 1
          EXTRA_TESTFLAGS: "-short"
          CGO_ENABLED: 1
          GOTESTSUM_JUNITFILE: ${{github.workspace}}/test-integration-parallel-junit.xml
        run: mingw32-make.exe integration
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: TestResults Windows
          path: |
            ${{github.workspace}}/*-junit.xml

